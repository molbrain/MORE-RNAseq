## R scirpt
## 020_004_edgeR.R.txt

library(edgeR)
library(genefilter)
library(org.Mm.eg.db)
#library(org.hg.eg.db)

DATASET <- "TR-0001"

Controlset <- intersect(which(data.Annot$Dataset==DATASET),which(data.Annot$Feature1=="Control"))
Treatset   <- intersect(which(data.Annot$Dataset==DATASET),which(data.Annot$Feature1=="Treat"))

useSample <- rownames(data.Annot)[which(data.Annot$Dataset==DATASET)]
useAnnot <- data.Annot[useSample,]

#useTPM <- TPM[,useSample]
#useCOUNT <- COUNT[,useSample]

useTPM <- TPM[grep("^L1",rownames(TPM)),useSample]
useCOUNT <- COUNT[grep("^L1",rownames(TPM)),useSample]

#useTPM <- TPM[grep("^ENS",rownames(TPM)),useSample]
#useCOUNT <- COUNT[grep("^ENS",rownames(TPM)),useSample]

if(length(Controlset)>1){
	useMean.logTPM.Control <-rowMeans(log(useTPM[,rownames(data.Annot)[Controlset]] +1,2))
}else{
	useMean.logTPM.Control <-log(useTPM[,rownames(data.Annot)[Controlset]] +1,2)
}
if(length(Treatset)>1){
	useMean.logTPM.Treat <-rowMeans(log(useTPM[,rownames(data.Annot)[Treatset]] +1,2))
}else{
	useMean.logTPM.Treat <-log(useTPM[,rownames(data.Annot)[Treatset]] +1,2)
}

GROUP <- useAnnot$Feature1

#################################

if(length(Controlset) >1 && length(Treatset) >1){

design <- model.matrix(~0+GROUP)
colnames(design) <- sub("GROUP","",colnames(design))

y <- DGEList(counts = useCOUNT, group = GROUP)
#keep <- filterByExpr(y,design)
#y <- y[keep, , keep.lib.sizes=FALSE]


mean.logTPM.Control <- useMean.logTPM.Control[rownames(y)]
mean.logTPM.Treat <- useMean.logTPM.Treat[rownames(y)]
Diff.mean.logTPM <- mean.logTPM.Treat - mean.logTPM.Control

minus3sd <- mean(Diff.mean.logTPM)- (3*sd(Diff.mean.logTPM))
plus3sd <- mean(Diff.mean.logTPM)+ (3*sd(Diff.mean.logTPM))

#which(Diff.mean.logTPM < minus3sd)
#which(Diff.mean.logTPM > plus3sd)

y <- calcNormFactors(y)

y <- estimateGLMCommonDisp(y, design)
y <- estimateGLMTrendedDisp(y, design)
y <- estimateGLMTagwiseDisp(y, design)

fit <- glmQLFit(y, design)

#pdf(paste("check_MDS_BCV_QLDisp.pdf"))
#plotMDS(y,col=c("tomato","grey4")[factor(GROUP)])
#legend("topleft",levels(factor(GROUP)),text.col=c("grey4","tomato")[levels(factor(GROUP))],pch=16,col=c("grey4","tomato")[factor(levels(factor(GROUP)))])
#plotBCV(y)
#plotQLDisp(fit)
#dev.off()

contrasts <- makeContrasts(
	QL=Treat - Control,
	levels=design
)
qlf  <- glmQLFTest(fit,contrast=contrasts)
qltop  <- topTags(qlf, n=nrow(qlf$table))[[1]][rownames(y),]

#> which(rownames(qltop)!=names(Diff.mean.logTPM))
#integer(0)



#EDGER_STAT<-"FDR"
EDGER_STAT<-"PValue"
hits <- rownames(qltop)[intersect(union(which(Diff.mean.logTPM > plus3sd),which(Diff.mean.logTPM < minus3sd)),which(qltop[,EDGER_STAT]<0.05))]
#hits <- rownames(qltop)[intersect(which(Diff.mean.logTPM > plus3sd),which(qltop[,EDGER_STAT]<0.05))]

pdf("heatmap.pdf")
heatmap(log(useTPM +1,2)[hits,])
dev.off()

SCATTERPLOT_XMIN <- -1*max(abs(Diff.mean.logTPM))*1.2
SCATTERPLOT_XMAX <-    max(abs(Diff.mean.logTPM))*1.2

pdf("scatterplot.pdf")
plot(Diff.mean.logTPM,-1*log(qltop[,EDGER_STAT],10),xlim=c(SCATTERPLOT_XMIN,SCATTERPLOT_XMAX),type="n",xlab="Difference of mean logTPM (Treat - Control)",ylab=paste0("-1*log10",EDGER_STAT,""))
points(Diff.mean.logTPM,-1*log(qltop[,EDGER_STAT],10),pch=16,col="#22222230")
segments(plus3sd,-0.1,plus3sd,max(-1*log(qltop[hits,EDGER_STAT],10))*1.2,col="pink",lty=2)
segments(minus3sd,-0.1,minus3sd,max(-1*log(qltop[hits,EDGER_STAT],10))*1.2,col="pink",lty=2)
segments(-10,-1*log(0.05,10),10,-1*log(0.05,10),col="pink",lty=2)
points(Diff.mean.logTPM[hits],-1*log(qltop[hits,EDGER_STAT],10),pch=16,col="red")
text(Diff.mean.logTPM[hits],-1*log(qltop[hits,EDGER_STAT],10),labels=paste(GeneDesc[hits,"Symbol"],sub("L1-fli-","",GeneDesc[hits,"Type"])),col="red",cex=.5,adj=c(-.2,NA))
dev.off()

write.table(data.frame(Id=hits,Diff.mean.logTPM=Diff.mean.logTPM[hits],pValue=qltop[hits,"PValue"],FDR=qltop[hits,"FDR"],GeneDesc[hits,],TPM[hits,]),"hits.txt",sep="\t",eol="\n",col.names=TRUE,quot=FALSE)

} else {

	mean.logTPM.Control <- useMean.logTPM.Control
	mean.logTPM.Treat <- useMean.logTPM.Treat
	Diff.mean.logTPM <- mean.logTPM.Treat - mean.logTPM.Control
	
	minus3sd <- mean(Diff.mean.logTPM)- (3*sd(Diff.mean.logTPM))
	plus3sd <- mean(Diff.mean.logTPM)+ (3*sd(Diff.mean.logTPM))
	hits <- names(Diff.mean.logTPM)[union(which(Diff.mean.logTPM > plus3sd),which(Diff.mean.logTPM < minus3sd))]

	write.table(
		data.frame(
		  Id=hits,
		  Diff.mean.logTPM=Diff.mean.logTPM[hits],
		  pValue=rep("NA",length(hits)),
		  FDR=rep("NA",length(hits)),
		  GeneDesc[hits,],TPM[hits,]
		),
		"hits.txt",sep="\t",eol="\n",col.names=TRUE,quot=FALSE
	)

}
